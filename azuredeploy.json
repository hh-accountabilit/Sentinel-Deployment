{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "rgName": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Log Analytics workspace"
            }
        },
        "pricingTier": {
            "type": "string",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            },
            "allowedValues": [
                "CapacityReservation",
                "Free",
                "LACluster",
                "PerGB2018",
                "PerNode",
                "Premium",
                "Standalone",
                "Standard"
            ],
            "defaultValue": "PerGB2018"
        },
        "capacityReservation": {
            "type": "int",
            "metadata": {
                "description": "Commitment tier"
            },
            "allowedValues": [
                100,
                200,
                300,
                400,
                500,
                1000,
                2000,
                5000
            ],
            "defaultValue": 100
        },
        "enableDataConnectors": {
            "type": "array",
            "metadata": {
                "description": "The kind of data connectors that can be deployed via ARM templates are the following: [\"AzureActivityLog\",\"SecurityInsightsSecurityEventCollectionConfiguration\",\"WindowsFirewall\",\"DnsAnalytics\"], Reference: https://docs.microsoft.com/azure/templates/microsoft.operationalinsights/2020-03-01-preview/workspaces/datasources#microsoftoperationalinsightsworkspacesdatasources-object"
            },
            "defaultValue": []
        },
        "severityLevels": {
            "type": "array",
            "metadata": {
                "description": "Severity levels desired for Analytics Rules"
            },
            "defaultValue": []
        },
        "dailyQuota": {
            "type": "int",
            "metadata": {
                "description": "Daily ingestion limit in GBs. This limit doesn't apply to the following tables: SecurityAlert, SecurityBaseline, SecurityBaselineSummary, SecurityDetection, SecurityEvent, WindowsFirewall, MaliciousIPCommunication, LinuxAuditLog, SysmonEvent, ProtectionStatus, WindowsEvent"
            }
        },
        "dataRetention": {
            "type": "int",
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            },
            "defaultValue": 90
        },
        "immediatePurgeDataOn30Days": {
            "type": "bool",
            "metadata": {
                "description": "If set to true when changing retention to 30 days, older data will be immediately deleted. Use this with extreme caution. This only applies when retention is being set to 30 days."
            },
            "defaultValue": true
        },
        "enableSolutions1P": {
            "type": "array",
            "metadata": {
                "description": "The list of Content Hub 1st party solutions to deploy."
            },
            "defaultValue": []
        },
        "enableSolutionsEssentials": {
            "type": "array",
            "metadata": {
                "description": "The list of Content Hub Essentials solutions to deploy."
            },
            "defaultValue": []
        },
        "enableSolutionsTraining": {
            "type": "array",
            "metadata": {
                "description": "The list of Content Hub Training solutions to deploy."
            },
            "defaultValue": []
        },
        "aadStreams": {
            "type": "array",
            "metadata": {
                "description": "The list of data types to enable for Azure AD connector"
            },
            "defaultValue": []
        },
        "enableUeba": {
            "type": "bool",
            "metadata": {
                "description": "Whether or not UEBA should be enabled"
            },
            "defaultValue": true
        },
        "identityProviders": {
            "type": "array",
            "metadata": {
                "description": "Array of identity providers to be synched with UEBA. Valid identity providers are 'ActiveDirectory' and 'AzureActiveDirectory'"
            },
            "defaultValue": []
        },
        "enableDiagnostics": {
            "type": "bool"
        },
        "enableMLAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable ML Behavior Analytics rules"
            },
            "defaultValue": false
        },
        "enableScheduledAlerts": {
            "type": "bool",
            "metadata": {
                "description": "Enable Scheduled analytics rules"
            },
            "defaultValue": false
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The location of resources"
            },
            "defaultValue": "https://raw.githubusercontent.com/garybushey/AllInOneGov/main"
        }
    },
    "adminUsername": {
  "type": "string",
  "metadata": {
    "description": "Admin username for the Linux VM"
  }
},
"adminPassword": {
  "type": "secureString",
  "metadata": {
    "description": "Admin password for the Linux VM"
  }
},
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2020-06-01",
            "name": "[parameters('rgName')]",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "name": "workspaceCreation",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/v2/LinkedTemplates/workspace.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "pricingTier": {
                        "value": "[parameters('pricingTier')]"
                    },
                    "dailyQuota": {
                        "value": "[parameters('dailyQuota')]"
                    },
                    "dataRetention": {
                        "value": "[parameters('dataRetention')]"
                    },
                    "immediatePurgeDataOn30Days": {
                        "value": "[parameters('immediatePurgeDataOn30Days')]"
                    },
                    "capacityReservation": {
                        "value": "[parameters('capacityReservation')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "settings",
            "apiVersion": "2020-06-01",
            "dependsOn": [
                "workspaceCreation"
            ],
            "resourceGroup": "[parameters('rgName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/v2/LinkedTemplates/settings.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "enableUeba": {
                        "value": "[parameters('enableUeba')]"
                    },
                    "identityProviders": {
                        "value": "[parameters('identityProviders')]"
                    },
                    "enableDiagnostics": {
                        "value": "[parameters('enableDiagnostics')]"
                    }
                }
            }
        },
        {
            "condition": "[not(empty(parameters('enableDataConnectors')))]",
            "name": "enableDataConnectors",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "workspaceCreation",
                "enableSolutionsAndAlerts"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/v2/LinkedTemplates/dataConnectors.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "dataConnectorsKind": {
                        "value": "[parameters('enableDataConnectors')]"
                    },
                    "aadStreams": {
                        "value": "[parameters('aadStreams')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "tenantId": {
                        "value": "[subscription().tenantId]"
                    },
                    "subscriptionId": {
                        "value": "[subscription().subscriptionId]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[or(not(empty(parameters('enableSolutions1P'))),not(empty(parameters('enableSolutionsEssentials'))),not(empty(parameters('enableSolutionsTraining'))))]",
            "name": "enableSolutionsAndAlerts",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-06-01",
            "resourceGroup": "[parameters('rgName')]",
            "dependsOn": [
                "workspaceCreation",
                "[resourceId('Microsoft.Resources/resourceGroups',parameters('rgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Tools/Sentinel-All-In-One/v2/LinkedTemplates/solutionsAndAlerts.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "enableSolutions1P": {
                        "value": "[replace(replace(string(parameters('enableSolutions1P')),'[',''),']','')]"
                    },
                    "enableSolutionsEssentials": {
                        "value": "[replace(replace(string(parameters('enableSolutionsEssentials')),'[',''),']','')]"
                    },
                    "enableSolutionsTraining": {
                        "value": "[replace(replace(string(parameters('enableSolutionsTraining')),'[',''),']','')]"
                    },
                    "workspaceName": {
                        "value": "[parameters('workspaceName')]"
                    },
                    "severityLevels": {
                        "value": "[replace(replace(string(parameters('severityLevels')),'[',''),']','')]"
                    },
                    "enableAlerts": {
                        "value": "[parameters('enableScheduledAlerts')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
    {
  "type": "Microsoft.Network/networkSecurityGroups",
  "apiVersion": "2023-05-01",
  "name": "syslogNsg",
  "location": "[parameters('location')]",
  "properties": {
    "securityRules": [
      {
        "name": "allow-ssh",
        "properties": {
          "protocol": "Tcp",
          "sourcePortRange": "*",
          "destinationPortRange": "22",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 100,
          "direction": "Inbound"
        }
      },
      {
        "name": "allow-syslog",
        "properties": {
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "514",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 110,
          "direction": "Inbound"
        }
      },
      {
        "name": "allow-1470",
        "properties": {
          "protocol": "*",
          "sourcePortRange": "*",
          "destinationPortRange": "1470",
          "sourceAddressPrefix": "*",
          "destinationAddressPrefix": "*",
          "access": "Allow",
          "priority": 120,
          "direction": "Inbound"
        }
      }
    ]
  }
},
{
  "type": "Microsoft.Network/publicIPAddresses",
  "apiVersion": "2023-05-01",
  "name": "syslogPublicIp",
  "location": "[parameters('location')]",
  "properties": {
    "publicIPAllocationMethod": "Dynamic"
  }
},
{
  "type": "Microsoft.Network/virtualNetworks",
  "apiVersion": "2023-05-01",
  "name": "syslogVnet",
  "location": "[parameters('location')]",
  "properties": {
    "addressSpace": {
      "addressPrefixes": [
        "10.1.0.0/16"
      ]
    },
    "subnets": [
      {
        "name": "default",
        "properties": {
          "addressPrefix": "10.1.0.0/24"
        }
      }
    ]
  }
},
{
  "type": "Microsoft.Network/networkInterfaces",
  "apiVersion": "2023-05-01",
  "name": "syslogNic",
  "location": "[parameters('location')]",
  "dependsOn": [
    "syslogVnet",
    "syslogNsg",
    "syslogPublicIp"
  ],
  "properties": {
    "ipConfigurations": [
      {
        "name": "ipconfig1",
        "properties": {
          "subnet": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'syslogVnet', 'default')]"
          },
          "privateIPAllocationMethod": "Dynamic",
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'syslogPublicIp')]"
          }
        }
      }
    ],
    "networkSecurityGroup": {
      "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'syslogNsg')]"
    }
  }
},
{
  "type": "Microsoft.Compute/virtualMachines",
  "apiVersion": "2023-03-01",
  "name": "syslog-vm",
  "location": "[parameters('location')]",
  "dependsOn": [
    "syslogNic"
  ],
  "properties": {
    "hardwareProfile": {
      "vmSize": "Standard_B2ms"
    },
    "osProfile": {
      "computerName": "syslog-vm",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": false
      }
    },
    "storageProfile": {
      "imageReference": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "20_04-lts-gen2",
        "version": "latest"
      },
      "osDisk": {
        "createOption": "FromImage"
      }
    },
    "networkProfile": {
      "networkInterfaces": [
        {
          "id": "[resourceId('Microsoft.Network/networkInterfaces', 'syslogNic')]"
        }
      ]
    }
  }
}
    ],
    "outputs": {
        "workspaceName": {
            "type": "string",
            "value": "[parameters('workspaceName')]"
        },
        "dataConnectorsList": {
            "type": "string",
            "value": "[replace(replace(string(parameters('enableDataConnectors')),'\"',''),'[','')]"
        }
    }
}